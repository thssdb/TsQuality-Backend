<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.edu.tsinghua.tsquality.mappers.database.IoTDBChunkSeriesStatMapper">
    <update id="createChunkSeriesStatTable" parameterType="String">
       CREATE TABLE IF NOT EXISTS chunk_series_stats(
            `cid` BIGINT PRIMARY KEY,
            `min_timestamp` BIGINT NOT NULL,
            `max_timestamp` BIGINT NOT NULL,
            `count` BIGINT NOT NULL,
            `miss_count` BIGINT NOT NULL,
            `special_count` BIGINT NOT NULL,
            `late_count` BIGINT,
            `redundancy_count` BIGINT,
            `value_count` BIGINT,
            `variation_count` BIGINT,
            `speed_count` BIGINT,
            `acceleration_count` BIGINT,
            FOREIGN KEY(`cid`) REFERENCES chunks(`cid`) ON DELETE CASCADE
        )
    </update>

    <insert id="insert">
        INSERT IGNORE INTO chunk_series_stats VALUES (
            #{cid},
            #{stat.minTimestamp},
            #{stat.maxTimestamp},
            #{stat.count},
            #{stat.missCount},
            #{stat.specialCount},
            #{stat.lateCount},
            #{stat.redundancyCount},
            #{stat.valueCount},
            #{stat.variationCount},
            #{stat.specialCount},
            #{stat.accelerationCount}
        )
    </insert>

    <select id="selectByPath" resultType="IoTDBSeriesStat">
        select *
        from series natural join chunks natural join chunk_series_stats
        where path = #{path}
    </select>

    <select id="selectAsStatByPath" resultType="IoTDBSeriesStat">
        select
        <include refid="cn.edu.tsinghua.tsquality.mappers.database.DataQualityMapper.statColumns" />
        from series natural join chunks natural join chunk_series_stats
        where path = #{path}
    </select>

    <select id="selectStats" resultType="IoTDBSeriesStat">
        select
        <include refid="cn.edu.tsinghua.tsquality.mappers.database.DataQualityMapper.statColumns" />
        from series natural join chunks natural join chunk_series_stats
        where
        <foreach item="item" collection="timeRanges" open="(" separator=") or (" close=")" >
            min_timestamp >= #{item.min} and max_timestamp &lt;= #{item.max}
        </foreach>
    </select>

    <select id="selectTimeRanges" resultType="TimeRange">
        select min_timestamp as min, max_timestamp as max
        from series natural join chunks natural join chunk_series_stats
        where
        <foreach item="item" collection="timeRanges" open="(" separator=") or (" close=")" >
            min_timestamp >= #{item.min} and max_timestamp &lt;= #{item.max}
        </foreach>
    </select>
</mapper>
